#lang racket
(begin (define x (vector 10 20))
       (define y x)
       (vector-set! x 0 11)
       (vector-ref y 0))
(define <0l> (vector 15 20))
(begin (define x1 <0l>)
       (define y1 x1)
       (vector-set! x1 0 23)
       (vector-ref y1 0))
(define <01> (vector 10 20))
(define x2 <01>)
(begin (void)
       (define y2 x2)
       (vector-set! x2 0 21)
       (vector-ref y2 0))
(define <a> (vector 10 20))
(define x3 <a>)
(begin (define y3 <a>)
       (vector-set! x3 0 11)
       (vector-ref y3 0))
(define <b> (vector 10 20))
(define x4 <b>)
(define y4 <b>)
(begin (void)
       (vector-set! x4 0 11)
       (vector-ref y4 0)
       (vector-set! <b> 0 24)
       (vector-ref x4 0))