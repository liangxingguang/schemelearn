#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.3.3 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 30 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 56 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 37
#"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1           0 887 0 26 3 12 #"#lang racket"
0 0 22 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 22 29 1 #"\n"
0 0 17 3 25 #";; A stack implementation"
0 0 22 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 10 #"make-stack"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 5 #"stack"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 3 #"())"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 22 3 3 #") ("
0 0 14 3 5 #"null?"
0 0 22 3 1 #" "
0 0 14 3 5 #"stack"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 3 #"top"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 22 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 22 3 1 #" "
0 0 14 3 5 #"stack"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"        ("
0 0 14 3 5 #"error"
0 0 22 3 1 #" "
0 0 19 3 23 #"\"Stack is empty -- Top\""
0 0 22 3 1 #" "
0 0 22 29 1 #"\n"
0 0 22 3 15 #"               "
0 0 14 3 5 #"stack"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"        ("
0 0 14 3 3 #"car"
0 0 22 3 1 #" "
0 0 14 3 5 #"stack"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 5 #"push!"
0 0 22 3 1 #" "
0 0 14 3 6 #"object"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ("
0 0 14 3 4 #"set!"
0 0 22 3 1 #" "
0 0 14 3 5 #"stack"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 14 3 6 #"object"
0 0 22 3 1 #" "
0 0 14 3 5 #"stack"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 14 3 6 #"object"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 4 #"pop!"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 22 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 22 3 1 #" "
0 0 14 3 5 #"stack"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"        ("
0 0 14 3 5 #"error"
0 0 22 3 1 #" "
0 0 19 3 25 #"\"Stack underflow -- POP!\""
0 0 22 3 1 #" "
0 0 14 3 5 #"stack"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"        ("
0 0 15 3 3 #"let"
0 0 22 3 3 #" (("
0 0 14 3 6 #"object"
0 0 22 3 2 #" ("
0 0 14 3 3 #"car"
0 0 22 3 1 #" "
0 0 14 3 5 #"stack"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 11 #"          ("
0 0 14 3 4 #"set!"
0 0 22 3 1 #" "
0 0 14 3 5 #"stack"
0 0 22 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 22 3 1 #" "
0 0 14 3 5 #"stack"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 10 #"          "
0 0 14 3 6 #"object"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 8 #"dispatch"
0 0 22 3 2 #"  "
0 0 14 3 2 #"op"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ("
0 0 15 3 4 #"case"
0 0 22 3 1 #" "
0 0 14 3 2 #"op"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"      (("
0 0 14 3 6 #"empty?"
0 0 22 3 3 #") ("
0 0 14 3 5 #"apply"
0 0 22 3 1 #" "
0 0 14 3 6 #"empty?"
0 0 22 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"      (("
0 0 14 3 3 #"top"
0 0 22 3 3 #") ("
0 0 14 3 5 #"apply"
0 0 22 3 1 #" "
0 0 14 3 3 #"top"
0 0 22 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"      (("
0 0 14 3 5 #"push!"
0 0 22 3 3 #") ("
0 0 14 3 5 #"apply"
0 0 22 3 1 #" "
0 0 14 3 5 #"push!"
0 0 22 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"      (("
0 0 14 3 4 #"pop!"
0 0 22 3 3 #") ("
0 0 14 3 5 #"apply"
0 0 22 3 1 #" "
0 0 14 3 4 #"pop!"
0 0 22 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 7 #"      ("
0 0 14 3 4 #"else"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"       ("
0 0 14 3 5 #"error"
0 0 22 3 1 #" "
0 0 19 3 37 #"\"Unknown stack operation -- DISPATCH\""
0 0 22 3 1 #" "
0 0 14 3 2 #"op"
0 0 22 3 4 #"))))"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 14 3 8 #"dispatch"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  )"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 2 #"p1"
0 0 22 3 2 #" ("
0 0 14 3 10 #"make-stack"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 2 #"p1"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"empty?"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 2 #"p1"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"push!"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 2 #"p1"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"push!"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 2 #"p1"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"push!"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"c"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 2 #"p1"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"pop!"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 2 #"p1"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"top"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 61
#";;a simple example for  object-oriented programming in scheme"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 13 #"make-point-2D"
0 0 22 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 5 #"get-x"
0 0 22 3 2 #") "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 5 #"get-y"
0 0 22 3 2 #") "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 6 #"set-x!"
0 0 22 3 1 #" "
0 0 14 3 5 #"new-x"
0 0 22 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 22 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #" "
0 0 14 3 5 #"new-x"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 6 #"set-y!"
0 0 22 3 1 #" "
0 0 14 3 5 #"new-y"
0 0 22 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 22 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #" "
0 0 14 3 5 #"new-y"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 22 3 2 #" ("
0 0 14 3 8 #"selector"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ("
0 0 15 3 4 #"case"
0 0 22 3 1 #" "
0 0 14 3 8 #"selector"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"      (("
0 0 14 3 5 #"get-x"
0 0 22 3 3 #") ("
0 0 14 3 5 #"apply"
0 0 22 3 1 #" "
0 0 14 3 5 #"get-x"
0 0 22 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"      (("
0 0 14 3 5 #"get-y"
0 0 22 3 3 #") ("
0 0 14 3 5 #"apply"
0 0 22 3 1 #" "
0 0 14 3 5 #"get-y"
0 0 22 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"      (("
0 0 14 3 6 #"set-x!"
0 0 22 3 3 #") ("
0 0 14 3 5 #"apply"
0 0 22 3 1 #" "
0 0 14 3 6 #"set-x!"
0 0 22 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"      (("
0 0 14 3 6 #"set-y!"
0 0 22 3 3 #") ("
0 0 14 3 5 #"apply"
0 0 22 3 1 #" "
0 0 14 3 6 #"set-y!"
0 0 22 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 7 #"      ("
0 0 14 3 4 #"else"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"       ("
0 0 14 3 5 #"error"
0 0 22 3 1 #" "
0 0 19 3 18 #"\"don't understand\""
0 0 22 3 1 #" "
0 0 14 3 8 #"selector"
0 0 22 3 4 #"))))"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  )"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 2 #"p2"
0 0 22 3 2 #" ("
0 0 14 3 13 #"make-point-2D"
0 0 22 3 1 #" "
0 0 20 3 2 #"10"
0 0 22 3 1 #" "
0 0 20 3 2 #"20"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 2 #"p2"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"get-x"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 2 #"p2"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"get-y"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 2 #"p2"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"set-x!"
0 0 22 3 1 #" "
0 0 20 3 2 #"45"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 2 #"p2"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"set-y!"
0 0 22 3 1 #" "
0 0 20 3 2 #"50"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 22 3 2 #" ("
0 0 14 3 2 #"p2"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"get-x"
0 0 22 3 3 #") ("
0 0 14 3 2 #"p2"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"get-y"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 23 #";;;;;;;;;;;;;;;;;;;;;;;"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 13 #"make-point-3D"
0 0 22 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #" "
0 0 14 3 1 #"z"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 22 3 3 #" (("
0 0 14 3 6 #"parent"
0 0 22 3 2 #" ("
0 0 14 3 13 #"make-point-2D"
0 0 22 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 5 #"get-z"
0 0 22 3 2 #") "
0 0 14 3 1 #"z"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 6 #"set-z!"
0 0 22 3 1 #" "
0 0 14 3 5 #"new-z"
0 0 22 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 22 3 1 #" "
0 0 14 3 1 #"z"
0 0 22 3 1 #" "
0 0 14 3 5 #"new-z"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 22 3 2 #" ("
0 0 14 3 8 #"selector"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 7 #"      ("
0 0 15 3 4 #"case"
0 0 22 3 1 #" "
0 0 14 3 8 #"selector"
0 0 22 29 1 #"\n"
0 0 22 3 10 #"        (("
0 0 14 3 5 #"get-z"
0 0 22 3 3 #") ("
0 0 14 3 5 #"apply"
0 0 22 3 1 #" "
0 0 14 3 5 #"get-z"
0 0 22 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 10 #"        (("
0 0 14 3 6 #"set-z!"
0 0 22 3 3 #") ("
0 0 14 3 5 #"apply"
0 0 22 3 1 #" "
0 0 14 3 6 #"set-z!"
0 0 22 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 14 3 5 #"apply"
0 0 22 3 1 #" "
0 0 14 3 6 #"parent"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 14 3 8 #"selector"
0 0 22 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 7 #")))))))"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 2 #"p3"
0 0 22 3 2 #" ("
0 0 14 3 13 #"make-point-3D"
0 0 22 3 1 #" "
0 0 20 3 1 #"3"
0 0 22 3 1 #" "
0 0 20 3 1 #"4"
0 0 22 3 1 #" "
0 0 20 3 1 #"5"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 22 3 1 #" "
0 0 19 3 14 #"\"-------------"
0 0 19 3 1 #"\\"
0 0 19 3 2 #"n\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 2 #"p3"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"get-z"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 2 #"p3"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"set-z!"
0 0 22 3 1 #" "
0 0 20 3 2 #"46"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 2 #"p3"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"get-z"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 2 #"p3"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"get-x"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 2 #"p3"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"get-y"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 13 #";;;;;;;;;;;;;"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 11 #"make-stack1"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 3 #"() "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 28 #";;check the stack is emptied"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 12 #"empty-stack?"
0 0 22 3 1 #" "
0 0 14 3 5 #"stack"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 1 #"="
0 0 22 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 22 3 1 #" "
0 0 14 3 5 #"stack"
0 0 22 3 2 #") "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 34 #";;get the top element of the stack"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 10 #"top-stack1"
0 0 22 3 1 #" "
0 0 14 3 5 #"stack"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 22 3 2 #" ("
0 0 14 3 12 #"empty-stack?"
0 0 22 3 1 #" "
0 0 14 3 5 #"stack"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 7 #"      ("
0 0 14 3 7 #"display"
0 0 22 3 1 #" "
0 0 19 3 13 #"\"No element!\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 7 #"      ("
0 0 14 3 4 #"caar"
0 0 22 3 1 #" "
0 0 14 3 5 #"stack"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 17 3 31 #";;push a element into the stack"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 11 #"push-stack!"
0 0 22 3 1 #" "
0 0 14 3 5 #"stack"
0 0 22 3 1 #" "
0 0 14 3 4 #"item"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 22 3 3 #" (("
0 0 14 3 8 #"new-item"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 14 3 4 #"item"
0 0 22 3 2 #" ("
0 0 14 3 3 #"car"
0 0 22 3 1 #" "
0 0 14 3 5 #"stack"
0 0 22 3 4 #"))))"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ("
0 0 14 3 8 #"set-car!"
0 0 22 3 1 #" "
0 0 14 3 5 #"stack"
0 0 22 3 1 #" "
0 0 14 3 8 #"new-item"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ("
0 0 14 3 8 #"set-cdr!"
0 0 22 3 1 #" "
0 0 14 3 5 #"stack"
0 0 22 3 2 #" ("
0 0 14 3 1 #"+"
0 0 22 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 22 3 1 #" "
0 0 14 3 5 #"stack"
0 0 22 3 2 #") "
0 0 20 3 1 #"1"
0 0 22 3 4 #"))))"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 8 #"set-car!"
0 0 22 3 1 #" "
0 0 14 3 3 #"lat"
0 0 22 3 1 #" "
0 0 14 3 3 #"new"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"   ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 14 3 3 #"new"
0 0 22 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 22 3 1 #" "
0 0 14 3 3 #"lat"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 8 #"set-cdr!"
0 0 22 3 1 #" "
0 0 14 3 3 #"lat"
0 0 22 3 1 #" "
0 0 14 3 3 #"new"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"   ("
0 0 14 3 4 #"cons"
0 0 22 3 2 #" ("
0 0 14 3 3 #"car"
0 0 22 3 1 #" "
0 0 14 3 3 #"lat"
0 0 22 3 2 #") "
0 0 14 3 3 #"new"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 17 3 32 #";;pop out a element of the stack"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 10 #"pop-stack!"
0 0 22 3 1 #" "
0 0 14 3 5 #"stack"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 22 3 2 #" ("
0 0 14 3 12 #"empty-stack?"
0 0 22 3 1 #" "
0 0 14 3 5 #"stack"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 7 #"      ("
0 0 14 3 7 #"display"
0 0 22 3 1 #" "
0 0 19 3 15 #"\"No element\357\274\201\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 7 #"      ("
0 0 15 3 3 #"let"
0 0 22 3 3 #" (("
0 0 14 3 4 #"item"
0 0 22 3 2 #" ("
0 0 14 3 10 #"top-stack1"
0 0 22 3 1 #" "
0 0 14 3 5 #"stack"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"        ("
0 0 14 3 8 #"set-car!"
0 0 22 3 1 #" "
0 0 14 3 5 #"stack"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cdar"
0 0 22 3 1 #" "
0 0 14 3 5 #"stack"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"        ("
0 0 14 3 8 #"set-cdr!"
0 0 22 3 1 #" "
0 0 14 3 5 #"stack"
0 0 22 3 2 #" ("
0 0 14 3 1 #"-"
0 0 22 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 22 3 1 #" "
0 0 14 3 5 #"stack"
0 0 22 3 2 #") "
0 0 20 3 1 #"1"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"        "
0 0 14 3 4 #"item"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 5 #"stack"
0 0 22 3 2 #" ("
0 0 14 3 11 #"make-stack1"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 22 3 1 #" "
0 0 19 3 14 #"\"!!!!!!!!!!!!!"
0 0 19 3 1 #"\\"
0 0 19 3 2 #"n\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"empty-stack?"
0 0 22 3 1 #" "
0 0 14 3 5 #"stack"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"push-stack!"
0 0 22 3 1 #" "
0 0 14 3 5 #"stack"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"push-stack!"
0 0 22 3 1 #" "
0 0 14 3 5 #"stack"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 10 #"top-stack1"
0 0 22 3 1 #" "
0 0 14 3 5 #"stack"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 14 3 5 #"stack"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 10 #"pop-stack!"
0 0 22 3 1 #" "
0 0 14 3 5 #"stack"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 14 3 5 #"stack"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 8 #"set-car!"
0 0 22 3 2 #" )"
0           0
